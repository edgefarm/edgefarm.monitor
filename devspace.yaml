version: v2beta1

vars:
  mimir_password:
    command: date +%s | sha256sum | base64 | head -c 32 ; echo

pipelines:
  deploy-agent: |-
    # install grafana agent
    create_deployments monitoring-secret-for-grafana-agent
    create_deployments grafana-agent
    create_deployments monitoring-resources-for-nats

  deploy-nats: |-
    # deploy nats
    create_deployments nats

  deploy-node-exporter: |-
    # deploy node exporter
    create_deployments node-exporter
    create_deployments service-monitor-for-node-exporter

  deploy-mimir-grafana: |-
    # install grafana and mimir
    create_deployments prometheus-crd
    create_deployments grafana
    create_deployments grafana-mimir

  deploy-monitoring: |-
    # install all monitoring setup
    run_pipelines deploy-mimir-grafana
    run_pipelines deploy-edge-applications

  deploy-loki: |-
    # create_deployments loki
    create_deployments promtail

  deploy-edge-applications: |-
    # install grafana-agent and node-exporter edge applicaitons
    create_deployments edgeapplication-node-exporter
    create_deployments edgeapplication-cadvisor
    create_deployments edgeapplication-grafana-agent

deployments:
  kyverno-edge-monitoring-config:
    kubectl:
      manifests:
        - dev/manifests/kyverno/add_nodegroup_to_edge_monitoring.yaml
        - dev/manifests/kyverno/remove_nodegroup_from_edge_monitoring.yaml

  grafana-mimir:
    helm:
      chart:
        name: mimir-distributed
        repo: https://grafana.github.io/helm-charts
        version: "3.3.0"
      valuesFiles:
        - ./dev/charts/mimir/values.yaml
      values:
        nginx:
          basicAuth:
            password: ${mimir_password}
    namespace: monitoring

  grafana:
    helm:
      chart:
        name: grafana
        version: "6.44.0"
        repo: https://grafana.github.io/helm-charts
      valuesFiles:
        - ./dev/charts/grafana/values.yaml
      values:
        datasources:
          datasources.yaml:
            datasources:
              - name: mimir
                type: prometheus
                url: http://grafana-mimir-nginx.monitoring.svc:80/prometheus
                access: proxy
                basicAuth: true
                basicAuthUser: nats
                withCredentials: true
                isDefault: true
                editable: true
                secureJsonData:
                  basicAuthPassword: ${mimir_password}
              - name: Loki
                type: loki
                isDefault: false
                url: http://loki-loki-distributed-gateway.loki.svc
                editable: true
                basicAuth: true
                basicAuthUser: loki
                withCredentials: true
                secureJsonData:
                  basicAuthPassword: test
    namespace: monitoring

  loki:
    helm:
      chart:
        name: dev/charts/loki/loki-distributed/
        # repo: https://grafana.github.io/helm-charts
        # version: "0.65.3"
      # valuesFiles:
      #   - ./dev/charts/loki/values.yaml
    namespace: loki

  promtail:
    helm:
      chart:
        name: promtail
        repo: https://grafana.github.io/helm-charts
        version: "6.6.2"
      valuesFiles:
        - ./dev/charts/promtail/values.yaml
    namespace: loki

  edgeapplication-node-exporter:
    helm:
      chart:
        name: ./charts/node-exporter
    namespace: nodegroup

  edgeapplication-grafana-agent:
    helm:
      chart:
        name: ./charts/grafana-agent/
      values:
        configmap:
          agent_yaml:
            config:
              remote_write:
                basic_auth:
                  username: nats
                  password: ${mimir_password}
    namespace: nodegroup

  edgeapplication-cadvisor:
    helm:
      chart:
        name: ./charts/cadvisor/
    namespace: nodegroup

  prometheus-crd:
    kubectl:
      manifests:
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.coreos.com_podmonitors.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.coreos.com_probes.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.coreos.com_servicemonitors.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.grafana.com_grafanaagents.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.grafana.com_integrations.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.grafana.com_logsinstances.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.grafana.com_metricsinstances.yaml
        - https://raw.githubusercontent.com/grafana/agent/main/production/operator/crds/monitoring.grafana.com_podlogs.yaml
    namespace: monitoring

  nats:
    helm:
      chart:
        name: nats
        repo: https://nats-io.github.io/k8s/helm/charts/
      valuesFiles:
        - ./dev/charts/nats/values.yaml
    namespace: nats

  #old setup maybe we will need in future
  grafana-agent:
    helm:
      chart:
        name: grafana-agent-operator
        repo: https://grafana.github.io/helm-charts
      valuesFiles:
        - ./dev/charts/grafana-agent/values.yaml
    namespace: monitoring

  node-exporter:
    helm:
      chart:
        name: prometheus-node-exporter
        repo: https://prometheus-community.github.io/helm-charts
      valuesFiles:
        - ./dev/charts/node-exporter/values.yaml
    namespace: monitoring

  monitoring-secret-for-grafana-agent:
    kubectl:
      manifests:
        - ./dev/charts/grafana-agent/secret.yaml
    namespace: monitoring

  monitoring-resources-for-nats:
    kubectl:
      manifests:
        - ./dev/charts/grafana-agent/nats_metric_instance.yaml
        - ./dev/charts/grafana-agent/rbac_grafana_agent.yaml
        - ./dev/charts/grafana-agent/nats_grafana_agent.yaml
    namespace: monitoring

  service-monitor-for-node-exporter:
    kubectl:
      manifests:
        - ./dev/charts/node-exporter/service-monitor.yaml
    namespace: monitoring
