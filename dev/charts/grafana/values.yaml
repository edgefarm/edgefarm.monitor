ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
  labels: {}
  path: /
  pathType: Prefix
  hosts:
    - grafana.localhost

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: mimir
        type: prometheus
        url: http://grafana-mimir-nginx.monitoring.svc:80/prometheus
        access: proxy
        basicAuth: true
        basicAuthUser: nats
        withCredentials: true
        isDefault: true
        editable: true
        secureJsonData:
          basicAuthPassword: test
      - name: Loki
        type: loki
        isDefault: false
        url: http://loki-gateway.monitoring.svc:3100
        editable: true
        # basicAuth: true
        # basicAuthUser: loki
        # withCredentials: true
        # secureJsonData:
        #   basicAuthPassword: test

dashboardProviders:
  dashboardproviders.yaml:
    apiVersion: 1
    providers:
      - name: "default"
        orgId: 1
        folder: ""
        type: file
        disableDeletion: false
        editable: true
        options:
          path: /var/lib/grafana/dashboards/default

dashboards:
  default:
    nats-dashboard:
      url: https://raw.githubusercontent.com/edgefarm/grafana-dashboards/main/dashboards/nats.json
      token: ""
    node-exporter-dashboard:
      url: https://raw.githubusercontent.com/edgefarm/grafana-dashboards/main/dashboards/node_exporter.json
      token: ""
    node-exporter-custom-dashboard:
      url: https://raw.githubusercontent.com/edgefarm/grafana-dashboards/main/dashboards/node_exporter_custom.json
      token: ""
    docker-containers-dashboard:
      url: https://raw.githubusercontent.com/edgefarm/grafana-dashboards/main/dashboards/docker_containers.json
      token: ""
    cadvisor-dashboard:
      url: https://raw.githubusercontent.com/edgefarm/grafana-dashboards/main/dashboards/cadvisor.json
      token: ""
    cadvisor-custom:
      url: https://raw.githubusercontent.com/edgefarm/grafana-dashboards/main/dashboards/cadvisor_custom.json
      token: ""
#if you want persistend disk
# persistence:
#   type: pvc
#   enabled: true
#   # storageClassName: default
#   accessModes:
#     - ReadWriteOnce
#   size: 1Gi
#   # annotations: {}
#   finalizers:
#     - kubernetes.io/pvc-protection
