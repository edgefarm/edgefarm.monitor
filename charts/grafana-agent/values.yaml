# -- Overrides the chart's name
nameOverride: ""
# -- Overrides the chart's computed fullname
fullnameOverride: ""
# -- Annotations for the Deployment
annotations: {}
# -- Annotations for the Deployment Pods
podAnnotations: {}
# -- Annotations for the Deployment Pods
podLabels: {}
# -- Pod security context (runAsUser, etc.)
podSecurityContext: {}
# -- Container security context (allowPrivilegeEscalation, etc.)
containerSecurityContext: {}


monitoring: default

configmap:
  agent_yaml:
    global:
      remote_write: https://mimir.edgefarm.dev/api/v1/push
    metrics:
      configs:
        edgenodes_exporter:
          scrape_configs:
            job:
              node_exporter:
                targets:
                  [
                    "edge-node-exporter-prometheus-node-exporter.edge-monitoring.svc:9100",
                  ]
          remote_write:
            url: https://mimir.edgefarm.dev/api/v1/push
          # cadvisor is included this way
          # job:
          #   cadvisor:
          #     targets: ["edge-cadvisor.edge-monitoring.svc:8080"]
    # logs:
    #   configs:
    #     default:
    #       clients:
    #         url: http://loki-distributed-gateway.loki.svc/loki/api/v1/push
    #         basic_auth:
    #           username: test
    #           password: Bb3eNlCLPGNuVzqXBc4MnyHRvDt5eJbuYDE10h9Q
    #       scrape_configs:
    #         job:
    #           system:
    #             targets: localhost

rbac:
  # -- Toggle to create ClusterRole and ClusterRoleBinding
  create: true
  # -- Name of a PodSecurityPolicy to use in the ClusterRole. If unset, no PodSecurityPolicy is used.
  podSecurityPolicyName: ""
serviceAccount:
  # -- Toggle to create ServiceAccount
  create: true
  # -- Service account name
  name:
image:
  # -- Image registry
  registry: docker.io
  # -- Image repo
  repository: grafana/agent
  # -- Image tag
  tag: v0.33.1
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secrets
  pullSecrets: []
# -- If both are set, Agent Operator will create and maintain a service for scraping kubelets
# https://grafana.com/docs/agent/latest/operator/getting-started/#monitor-kubelets
kubeletService:
  namespace: default
  serviceName: kubelet
# -- List of additional cli arguments to configure agent-operator (example: `--log.level`)
# extraArgs: {}
extraArgs:
  - -enable-features=integrations-next
  - -config.file=/etc/agent/agent.yaml
  - -config.expand-env

# -- List of additional environment variables
# extraEnvs: []
extraEnvs:
  - name: MIMIR_AGENT_USERNAME
    valueFrom:
      secretKeyRef:
        name: mimir-agent-creds
        key: mimirAgentUsername
  - name: MIMIR_AGENT_PASSWORD
    valueFrom:
      secretKeyRef:
        name: mimir-agent-creds
        key: mimirAgentPassword

# -- Resource limits and requests config
resources: {}
# -- nodeSelector configuration
nodeSelector: {}
# -- Tolerations applied to Pods
tolerations:
  - effect: NoSchedule
    key: edgefarm.io
    operator: Exists
# -- Pod affinity configuration
affinity: {}
nodepoolSelector:
  monitor.edgefarm.io/metrics: "default"
