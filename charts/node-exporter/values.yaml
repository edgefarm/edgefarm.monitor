# Default values for prometheus-node-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
image:
  repository: quay.io/prometheus/node-exporter
  tag: "v1.8.2"
  pullPolicy: IfNotPresent
imagePullSecrets: []
# - name: "image-pull-secret"

service:
  type: ClusterIP
  port: 9100
  targetPort: 9100
  nodePort:
  portName: metrics
  listenOnAllInterfaces: true
  annotations:
    prometheus.io/scrape: "true"
    openyurt.io/topologyKeys: openyurt.io/nodepool
# Additional environment variables that will be passed to the daemonset
env: {}
##  env:
##    VARIABLE: value

## Customize the updateStrategy if set
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 1

resources:
  limits:
    cpu: 200m
    memory: 50Mi
  requests:
    cpu: 100m
    memory: 30Mi

serviceAccount:
  # Specifies whether a ServiceAccount should be created
  create: true
  # The name of the ServiceAccount to use.
  # If not set and create is true, a name is generated using the fullname template
  name:
  annotations: {}
  imagePullSecrets: []
  automountServiceAccountToken: false
securityContext:
  fsGroup: 65534
  runAsGroup: 65534
  runAsNonRoot: true
  runAsUser: 65534
containerSecurityContext: {}
# capabilities:
#   add:
#   - SYS_TIME

rbac:
  ## If true, create & use RBAC resources
  ##
  create: true
  ## If true, create & use Pod Security Policy resources
  ## https://kubernetes.io/docs/concepts/policy/pod-security-policy/
  pspEnabled: true
  pspAnnotations: {}

# Expose the service to the host network
hostNetwork: true
# Share the host process ID namespace
hostPID: true
# Mount the node's root file system (/) at /host/root in the container

tolerations:
  - effect: NoSchedule
    key: edgefarm.io
    operator: Exists

affinity: {}
# affinity:
#   nodeAffinity:
#     requiredDuringSchedulingIgnoredDuringExecution:
#       nodeSelectorTerms:
#         - matchExpressions:
#             - key: node-role.kubernetes.io/edge
#               operator: Exists
# Annotations to be added to node exporter pods
podAnnotations:
  # Fix for very slow GKE cluster upgrades
  cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
# Extra labels to be added to node exporter pods
podLabels: {}
## set to true to add the release label so scraping of the servicemonitor with kube-prometheus-stack works out of the box
releaseLabel: false
# Custom DNS configuration to be added to prometheus-node-exporter pods
dnsConfig: {}
# nameservers:
#   - 1.2.3.4
# searches:
#   - ns1.svc.cluster-domain.example
#   - my.dns.search.suffix
# options:
#   - name: ndots
#     value: "2"
#   - name: edns0

## Assign a nodeSelector if operating a hybrid cluster
##
nodeSelector: {}

## Assign a PriorityClassName to pods if set
# priorityClassName: ""

## Additional container arguments
extraArgs:
  - --collector.disable-defaults
  - --collector.cpu
  - --collector.diskstats
  - --collector.loadavg
  - --collector.filesystem
  - --collector.hwmon
  - --collector.meminfo
  - --collector.netclass
  - --collector.netdev
  - --collector.netstat
  - --collector.stat
  - --collector.time
  - --collector.uname
  - --collector.wifi
  - --path.procfs=/host/proc
  - --path.sysfs=/host/sys
  - --path.rootfs=/host/root

## Additional mounts from the host to node-exporter container
##
extraHostVolumeMounts:
  - name: proc
    hostPath: /proc
    mountPath: /host/proc
    readOnly: true
    mountPropagation: HostToContainer
  - name: sys
    hostPath: /sys
    mountPath: /host/sys
    readOnly: true
    mountPropagation: HostToContainer
  - name: root
    hostPath: /
    mountPath: /host/root
    readOnly: true
    mountPropagation: HostToContainer

## Additional configmaps to be mounted.
##
configmaps: []
# - name: <configMapName>
#   mountPath: <mountPath>
secrets: []
# - name: <secretName>
#   mountPath: <mountPatch>
## Override the deployment namespace
##
namespaceOverride: ""
## Additional containers for export metrics to text file
##
sidecars: []
##  - name: nvidia-dcgm-exporter
##    image: nvidia/dcgm-exporter:1.4.3

## Volume for sidecar containers
##
sidecarVolumeMount: []
##  - name: collector-textfiles
##    mountPath: /run/prometheus
##    readOnly: false

## Additional mounts from the host to sidecar containers
##
sidecarHostVolumeMounts: []
#  - name: <mountName>
#    hostPath: <hostPath>
#    mountPath: <mountPath>
#    readOnly: true|false
#    mountPropagation: None|HostToContainer|Bidirectional

## Additional InitContainers to initialize the pod
##
extraInitContainers: []
## Liveness probe
##
livenessProbe:
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
## Readiness probe
##
readinessProbe:
  failureThreshold: 3
  httpGet:
    httpHeaders: []
    scheme: http
  initialDelaySeconds: 0
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
# updatePolicy:
# Specifies whether recommended updates are applied when a Pod is started and whether recommended updates
# are applied during the life of a Pod. Possible values are "Off", "Initial", "Recreate", and "Auto".
# updateMode: Auto

nodepoolSelector:
  monitor.edgefarm.io/metrics: "default"
