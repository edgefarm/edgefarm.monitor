# -- Overrides the chart's name
nameOverride: ""
# -- Overrides the chart's computed fullname
fullnameOverride: ""
# -- Annotations for the Deployment
annotations:
  seccomp.security.alpha.kubernetes.io/pod: "docker/default"
# -- Annotations for the Deployment Pods
podAnnotations: {}
# -- Annotations for the Deployment Pods
podLabels: {}
# -- Pod security context (runAsUser, etc.)
podSecurityContext: {}
# -- Container security context (allowPrivilegeEscalation, etc.)
containerSecurityContext: {}
rbac:
  # -- Toggle to create ClusterRole and ClusterRoleBinding
  create: true
  # -- Name of a PodSecurityPolicy to use in the ClusterRole. If unset, no PodSecurityPolicy is used.
  podSecurityPolicyName: ""
image:
  # -- Image registry
  registry: gcr.io
  # -- Image repo
  repository: cadvisor/cadvisor
  # -- Image tag
  tag: v0.45.0
  # -- Image pull policy
  pullPolicy: IfNotPresent
  # -- Image pull secrets
  pullSecrets: []
# -- If both are set, Agent Operator will create and maintain a service for scraping kubelets
# https://grafana.com/docs/agent/latest/operator/getting-started/#monitor-kubelets
kubeletService:
  namespace: default
  serviceName: kubelet
# -- List of additional cli arguments to configure agent-operator (example: `--log.level`)
# extraArgs: {}
extraArgs: {}
# -- Resource limits and requests config
resources:
  requests:
    memory: 400Mi
    cpu: 400m
  limits:
    memory: 2000Mi
    cpu: 800m
# -- nodeSelector configuration
nodeSelector: {}
# -- Tolerations applied to Pods
tolerations:
  - effect: NoExecute
    key: edgefarm.applications
    operator: Exists
# -- Pod affinity configuration
# affinity: {}
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: node-role.kubernetes.io/edge
              operator: Exists
service:
  annotations: {}
  type:
  port: "8080"
  targetPort: "8080"
  portName: http
targetNodeGroupSelectors:
  monitor.edgefarm.io/metrics: "default"
