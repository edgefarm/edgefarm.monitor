apiVersion: apps.kubeedge.io/v1alpha1
kind: EdgeApplication
metadata:
  name: cadvisor
  labels:
    app.kubernetes.io/name: cadvisor
  namespace: {{ .Values.namespace | default .Release.Namespace }}
spec:
  workloadTemplate:
    manifests:
      - apiVersion: apps/v1
        kind: Deployment
        metadata:
          namespace: {{ .Values.namespace | default .Release.Namespace }}
          name: {{ include "cadvisor.fullname" . }}
          labels:
{{ include "cadvisor.labels" . | indent 12 }}
          {{- with .Values.annotations }}
          annotations:
          {{- toYaml . | nindent 12 }}
          {{- end }}
        spec:
          replicas: 1
          selector:
            matchLabels:
{{ include "cadvisor.selectorLabels" . | indent 14 }}
          template:
            metadata:
              labels:
{{ include "cadvisor.selectorLabels" . | indent 16 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 16 }}
        {{- end }}
        {{- with .Values.podAnnotations }}
              annotations:
        {{ toYaml . | indent 16 }}
        {{- end }}
            spec:
              {{- with .Values.podSecurityContext }}
              securityContext:
              {{- toYaml . | nindent 16 }}
              {{- end }}
              serviceAccountName: cadvisor
              containers:
              - name: {{ include "cadvisor.name" . }}
                image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
                imagePullPolicy: {{ .Values.image.pullPolicy }}
                env:
                  - name: NODE_NAME
                    valueFrom:
                      fieldRef:
                        fieldPath: spec.nodeName
                {{- with .Values.containerSecurityContext }}
                securityContext:
                {{- toYaml . | nindent 18 }}
                {{- end }}
                {{- with .Values.resources }}
                resources:
                {{- toYaml . | nindent 18 }}
                {{- end }}
                {{- if or (and .Values.kubeletService.namespace .Values.kubeletService.serviceName) (.Values.extraArgs) }}
                volumeMounts:
                  - name: rootfs
                    mountPath: /rootfs
                    readOnly: true
                  - name: var-run
                    mountPath: /var/run
                    readOnly: false
                  - name: sys
                    mountPath: /sys
                    readOnly: true
                  - name: docker
                    mountPath: /var/lib/docker
                    readOnly: true
                  - name: disk
                    mountPath: /dev/disk
                    readOnly: true
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                args:
                  {{- if .Values.extraArgs  }}
                  {{- range .Values.extraArgs  }}
                  - {{ . }}
                  {{- end }}
                  {{- end }}
                {{- end }}
              {{- with .Values.image.pullSecrets }}
              imagePullSecrets:
              {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- with .Values.nodeSelector }}
              nodeSelector:
              {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- with .Values.tolerations }}
              volumes:
                - name: rootfs
                  hostPath:
                    path: /
                - name: var-run
                  hostPath:
                    path: /var/run
                - name: sys
                  hostPath:
                    path: /sys
                - name: docker
                  hostPath:
                    path: /var/lib/docker
                - name: disk
                  hostPath:
                    path: /dev/disk
              tolerations:
              {{- toYaml . | nindent 16 }}
              {{- end }}
              {{- with .Values.affinity }}
              affinity:
              {{- toYaml . | nindent 16 }}
              {{- end }}
      - apiVersion: v1
        kind: Service
        metadata:
          name: {{ template "cadvisor.fullname" . }}
          namespace: {{ .Values.namespace | default .Release.Namespace }}
          labels:
{{ include "cadvisor.labels"  . | indent 11 }}
        {{- if .Values.service.annotations }}
          annotations:
        {{ toYaml .Values.service.annotations | indent 11 }}
        {{- end }}
        spec:
          type: {{ .Values.service.type }}
          ports:
            - port: {{ .Values.service.port }}
            {{- if ( and (eq .Values.service.type "NodePort" ) (not (empty .Values.service.nodePort)) ) }}
              nodePort: {{ .Values.service.nodePort }}
            {{- end }}
              targetPort: {{ .Values.service.targetPort }}
              protocol: TCP
              name: {{ .Values.service.portName }}
          selector:
{{ include "cadvisor.selectorLabels" . | indent 11 }}
  workloadScope:
    targetNodeGroups:
      {{- with .Values.targetNodeGroups }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
